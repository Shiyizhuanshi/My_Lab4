$version Generated by VerilatedVcd $end
$date Thu Nov 17 22:59:45 2022 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire 32 ( ImmOp [31:0] $end
  $var wire 32 ' PC [31:0] $end
  $var wire  1 ) PCsrc $end
  $var wire  1 % clk $end
  $var wire 32 * instr [31:0] $end
  $var wire  1 & rst $end
  $scope module PCcounter $end
   $var wire 32 ( ImmOp [31:0] $end
   $var wire 32 ' PC [31:0] $end
   $var wire  1 ) PCsrc $end
   $var wire 32 , WIDTH [31:0] $end
   $var wire  1 % clk $end
   $var wire 32 * instr [31:0] $end
   $var wire 32 + next_PC [31:0] $end
   $var wire  1 & rst $end
   $scope module instr_mem $end
    $var wire 32 , ADDRESS_WIDTH [31:0] $end
    $var wire 32 , DATA_WIDTH [31:0] $end
    $var wire 32 + addr [31:0] $end
    $var wire 32 * dout [31:0] $end
    $var wire 32 # rom_array[-1] [31:0] $end
    $var wire 32 $ rom_array[0] [31:0] $end
   $upscope $end
   $scope module pc_counter $end
    $var wire 32 ( ImmOp [31:0] $end
    $var wire 32 ' PC [31:0] $end
    $var wire 32 , PC_WIDTH [31:0] $end
    $var wire  1 ) PCsrc $end
    $var wire  1 % clk $end
    $var wire 32 + next_PC [31:0] $end
    $var wire  1 & rst $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
0%
0&
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
0)
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000100000 ,
